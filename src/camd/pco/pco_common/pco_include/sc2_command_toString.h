////////////////////////////////////////////////////
//                                                //
//   Automatically generated Headerfile for the   //
//              logging module.                   //
//         Modify at your own risk.               //
//                                                //
////////////////////////////////////////////////////



#ifndef SC2_COMMAND_TOSTRING_H
#define SC2_COMMAND_TOSTRING_H


#define _CRT_SECURE_NO_WARNINGS

typedef struct {
WORD wErrorNumber;
char Description[50];
} SC2_ErrorNumberToString;

typedef struct {
WORD wGroupCode;
WORD wSize;
SC2_ErrorNumberToString ErrNo[50];
} SC2_ErrorCodeToString;

static const int ErrorCodesLength = 12;

static const SC2_ErrorCodeToString ErrorCodes[] = {
{0x0080, 0x0001, {{0x0000, "RESPONSE_OK_CODE"}}},
{0x00c0, 0x0001, {{0x0000, "RESPONSE_ERROR_CODE"}}},
{0x0010, 0x0016, {{0x0001, "GET_CAMERA_TYPE"},{0x0002, "GET_CAMERA_HEALTH_STATUS"},{0x0003, "RESET_SETTINGS_TO_DEFAULT"},{0x0005, "INITIATE_SELFTEST_PROCEDURE"},{0x0006, "GET_TEMPERATURE"},{0x0007, "GET_HARDWARE_VERSIONS"},{0x0008, "GET_FIRMWARE_VERSIONS"},{0x0009, "GET_CAMERA_NAME"},{0x000a, "GET_INFO_STRING"},{0x000b, "GET_FAN_CONTROL_STATUS"},{0x000c, "SET_FAN_CONTROL_PARAMS"},{0x000d, "GET_FIRMWARE_VERSIONS_EXT"},{0x000e, "WRITE_MAILBOX"},{0x000f, "READ_MAILBOX"},{0x0010, "GET_MAILBOX_STATUS"},{0x0011, "GET_CAMERA_SETUP"},{0x0012, "SET_CAMERA_SETUP"},{0x0013, "GET_POWERSAVE_MODE"},{0x0014, "SET_POWERSAVE_MODE"},{0x0015, "GET_BATTERY_STATUS"},{0x0016, "GET_EXTERNAL_REGISTER"},{0x0017, "SET_EXTERNAL_REGISTER"}}},
{0x0011, 0x002e, {{0x0001, "GET_CAMERA_DESCRIPTION"},{0x0002, "GET_ROI"},{0x0003, "SET_ROI"},{0x0004, "GET_BINNING"},{0x0005, "SET_BINNING"},{0x0006, "GET_PIXELRATE"},{0x0007, "SET_PIXELRATE"},{0x0008, "GET_CONVERSION_FACTOR"},{0x0009, "SET_CONVERSION_FACTOR"},{0x000a, "GET_DOUBLE_IMAGE_MODE"},{0x000b, "SET_DOUBLE_IMAGE_MODE"},{0x000c, "GET_ADC_OPERATION"},{0x000d, "SET_ADC_OPERATION"},{0x000e, "GET_IR_SENSITIVITY"},{0x000f, "SET_IR_SENSITIVITY"},{0x0010, "GET_COOLING_SETPOINT_TEMPERATURE"},{0x0011, "SET_COOLING_SETPOINT_TEMPERATURE"},{0x0012, "GET_OFFSET_MODE"},{0x0013, "SET_OFFSET_MODE"},{0x0014, "GET_SENSOR_FORMAT"},{0x0015, "SET_SENSOR_FORMAT"},{0x0016, "GET_CAMERA_DESCRIPTION_EX"},{0x0019, "GET_NOISE_FILTER_MODE"},{0x001a, "SET_NOISE_FILTER_MODE"},{0x001e, "GET_HOT_PIXEL_CORRECTION_MODE"},{0x001f, "SET_HOT_PIXEL_CORRECTION_MODE"},{0x0020, "WRITE_HOT_PIXEL_LIST"},{0x0021, "READ_HOT_PIXEL_LIST"},{0x0022, "CLEAR_HOT_PIXEL_LIST"},{0x0025, "GET_NUMBER_HW_IO_SIGNALS"},{0x0026, "GET_HW_IO_SIGNAL_DESCRIPTION"},{0x0027, "GET_BAYER_MULTIPLIER"},{0x0028, "SET_BAYER_MULTIPLIER"},{0x0029, "GET_COLOR_CORRECTION_MATRIX"},{0x002c, "GET_DSNU_ADJUST_MODE"},{0x002d, "SET_DSNU_ADJUST_MODE"},{0x002e, "INIT_DSNU_ADJUSTMENT"},{0x002f, "GET_CDI_MODE"},{0x0030, "SET_CDI_MODE"},{0x0031, "GET_LOOKUPTABLE_INFO"},{0x0032, "GET_LOOKUPTABLE"},{0x0033, "SET_LOOKUPTABLE"},{0x0034, "LOAD_LOOKUPTABLE"},{0x0035, "READ_LOOKUPTABLE"},{0x0036, "GET_LOOKUPTABLE_INFO_EXT"},{0x0037, "GET_COOLING_SETPOINTS"}}},
{0x0012, 0x0027, {{0x0001, "GET_DELAY_EXPOSURE_TIME"},{0x0002, "SET_DELAY_EXPOSURE_TIME"},{0x0003, "GET_TRIGGER_MODE"},{0x0004, "SET_TRIGGER_MODE"},{0x0005, "FORCE_TRIGGER"},{0x0006, "GET_CAMERA_BUSY_STATUS"},{0x0007, "GET_USER_POWER_DOWN_TIME"},{0x0008, "SET_USER_POWER_DOWN_TIME"},{0x0009, "GET_EXP_TRIG_SIGNAL_STATUS"},{0x000a, "GET_DELAY_EXPOSURE_TIME_TABLE"},{0x000b, "SET_DELAY_EXPOSURE_TIME_TABLE"},{0x000c, "GET_TIMEBASE"},{0x000d, "SET_TIMEBASE"},{0x000e, "GET_POWER_DOWN_MODE"},{0x000f, "SET_POWER_DOWN_MODE"},{0x0010, "GET_COC_RUNTIME"},{0x0013, "GET_FPS_EXPOSURE_MODE"},{0x0014, "SET_FPS_EXPOSURE_MODE"},{0x0015, "GET_MODULATION_MODE"},{0x0016, "SET_MODULATION_MODE"},{0x0017, "GET_FRAMERATE"},{0x0018, "SET_FRAMERATE"},{0x0019, "GET_HW_IO_SIGNAL"},{0x001a, "SET_HW_IO_SIGNAL"},{0x001b, "GET_COC_EXPTIME"},{0x001c, "GET_CAMERA_SYNC_MODE"},{0x001d, "SET_CAMERA_SYNC_MODE"},{0x001e, "GET_IMAGE_TIMING"},{0x001f, "GET_FAST_TIMING_MODE"},{0x0020, "SET_FAST_TIMING_MODE"},{0x0021, "GET_SENSOR_SIGNAL_STATUS"},{0x0022, "GET_CMOS_LINETIMING"},{0x0023, "SET_CMOS_LINETIMING"},{0x0024, "GET_CMOS_LINE_EXPOSURE_DELAY"},{0x0025, "SET_CMOS_LINE_EXPOSURE_DELAY"},{0x0026, "GET_HW_IO_SIGNAL_TIMING"},{0x0027, "SET_HW_IO_SIGNAL_TIMING"},{0x0028, "GET_HW_LED_SIGNAL"},{0x0029, "SET_HW_LED_SIGNAL"}}},
{0x0013, 0x0006, {{0x0001, "GET_CAMERA_RAM_SIZE"},{0x0002, "GET_CAMERA_RAM_SEGMENT_SIZE"},{0x0003, "SET_CAMERA_RAM_SEGMENT_SIZE"},{0x0004, "CLEAR_RAM_SEGMENT"},{0x0005, "GET_ACTIVE_RAM_SEGMENT"},{0x0006, "SET_ACTIVE_RAM_SEGMENT"}}},
{0x0014, 0x0017, {{0x0001, "GET_STORAGE_MODE"},{0x0002, "SET_STORAGE_MODE"},{0x0003, "GET_RECORDER_SUBMODE"},{0x0004, "SET_RECORDER_SUBMODE"},{0x0005, "GET_RECORDING_STATE"},{0x0006, "SET_RECORDING_STATE"},{0x000a, "ARM_CAMERA"},{0x0007, "GET_ACQUIRE_MODE"},{0x0008, "SET_ACQUIRE_MODE"},{0x0009, "GET_ACQ_ENBL_SIGNAL_STATUS"},{0x000b, "SET_DATE_TIME"},{0x000c, "GET_TIMESTAMP_MODE"},{0x000d, "SET_TIMESTAMP_MODE"},{0x000e, "GET_RECORD_STOP_EVENT"},{0x000f, "SET_RECORD_STOP_EVENT"},{0x0010, "STOP_RECORD"},{0x0011, "GET_EVENT_MON_CONFIGURATION"},{0x0012, "SET_EVENT_MON_CONFIGURATION"},{0x0013, "GET_EVENT_LIST"},{0x0014, "GET_ACQUIRE_CONTROL"},{0x0015, "SET_ACQUIRE_CONTROL"},{0x0016, "GET_ACQUIRE_MODE_EX"},{0x0017, "SET_ACQUIRE_MODE_EX"}}},
{0x0015, 0x0011, {{0x0001, "GET_SEGMENT_IMAGE_SETTINGS"},{0x0002, "GET_NUMBER_OF_IMAGES_IN_SEGMENT"},{0x0005, "READ_IMAGES_FROM_SEGMENT"},{0x0006, "REQUEST_IMAGE"},{0x0007, "CANCEL_IMAGE_TRANSFER"},{0x0008, "REPEAT_IMAGE"},{0x0009, "GET_BIT_ALIGNMENT"},{0x000a, "SET_BIT_ALIGNMENT"},{0x000b, "PLAY_IMAGES_FROM_SEGMENT"},{0x000c, "GET_PLAY_POSITION"},{0x000d, "SET_VIDEO_PAYLOAD_IDENTIFIER"},{0x000e, "GET_METADATA_MODE"},{0x000f, "SET_METADATA_MODE"},{0x0010, "GET_COLOR_SETTINGS"},{0x0011, "SET_COLOR_SETTINGS"},{0x0012, "DO_WHITE_BALANCE"},{0x0013, "GET_WHITE_BALANCE_STATUS"}}},
{0x0016, 0x000d, {{0x0001, "GET_IEEE1394_INTERFACE_PARAMS"},{0x0002, "SET_IEEE1394_INTERFACE_PARAMS"},{0x0003, "GET_IEEE1394_ISO_BYTEORDER"},{0x0004, "SET_IEEE1394_ISO_BYTEORDER"},{0x0011, "GET_INTERFACE_OUTPUT_FORMAT"},{0x0010, "SET_INTERFACE_OUTPUT_FORMAT"},{0x0012, "GET_IMAGE_TRANSFER_MODE"},{0x0013, "SET_IMAGE_TRANSFER_MODE"},{0x0014, "GET_INTERFACE_STATUS"},{0x0032, "GET_CL_BAUDRATE"},{0x0033, "SET_CL_BAUDRATE"},{0x0034, "GET_CL_CONFIGURATION"},{0x0035, "SET_CL_CONFIGURATION"}}},
{0x0017, 0x0003, {{0x0001, "FATAL_ERROR_MSG"},{0x0007, "IMAGE_TRANSFER_DONE_MSG"},{0x0008, "DEBUG_ENVELOPE"}}},
{0x001a, 0x000e, {{0x0001, "ASCII_COMMAND"},{0x0002, "LS_COMMAND_LED_DRIVER_ON"},{0x0003, "LS_COMMAND_LED_DRIVER_OFF"},{0x0004, "LS_COMMAND_LED_DRIVER_GET_STATE"},{0x0010, "LS_COMMAND_SET_OPERATING_MODE"},{0x0011, "LS_COMMAND_GET_OPERATING_MODE"},{0x0012, "LS_COMMAND_FREQUENCY_UPDATE"},{0x0020, "LS_COMMAND_ANALOG_SWITCH_SINE"},{0x0021, "LS_COMMAND_ANALOG_SWITCH_SQUARE"},{0x0022, "LS_COMMAND_ANALOG_SWITCH_EXTERNAL"},{0x0023, "LS_COMMAND_ANALOG_SWITCH_GROUND"},{0x0024, "LS_COMMAND_ANALOG_SWITCH_GET_STATE"},{0x0044, "LS_COMMAND_DDS_SET_RELATIVE_PHASE"},{0x0045, "LS_COMMAND_DDS_GET_RELATIVE_PHASE"}}},
{0x001b, 0x000c, {{0x0001, "GET_FLIM_MODULATION_PARAMS"},{0x0002, "SET_FLIM_MODULATION_PARAMS"},{0x0003, "GET_FLIM_PHASE_SEQUENCE_PARAMS"},{0x0004, "SET_FLIM_PHASE_SEQUENCE_PARAMS"},{0x0005, "GET_FLIM_IMAGE_PROCESSING_FLOW"},{0x0006, "SET_FLIM_IMAGE_PROCESSING_FLOW"},{0x0007, "GET_FLIM_MASTER_MODULATION_FREQUENCY"},{0x0008, "SET_FLIM_MASTER_MODULATION_FREQUENCY"},{0x0009, "GET_FLIM_MASTER_MODULATION_FREQUENCY_TABLE"},{0x000a, "SET_FLIM_MASTER_MODULATION_FREQUENCY_TABLE"},{0x000b, "GET_FLIM_RELATIVE_PHASE"},{0x000c, "SET_FLIM_RELATIVE_PHASE"}}},
};


static inline void ComToString(WORD code,char* string) {
  WORD groupcode = code & 0x00FF;
  WORD errorcode = (code & 0xFF00)/0x0100;
  for(int i=0;i<ErrorCodesLength;i++) { 
    if(groupcode == ErrorCodes[i].wGroupCode) { 
      for(int j=0;j<ErrorCodes[i].wSize;j++) {
        if(errorcode == ErrorCodes[i].ErrNo[j].wErrorNumber) {
          sprintf(string,"0x%04x %s",code,ErrorCodes[i].ErrNo[j].Description);
          return; } }
      sprintf(string,"0x%04x ERROR_CODE_NOT_FOUND",code);
      return; } }
  sprintf(string,"0x%04x GROUP_CODE_NOT_FOUND",code);
  return;
}

#endif